name: Sync to pmmp/Pocketmine-MP branch major-next

on:
  workflow_dispatch:
  schedule:
    - cron: '0 10 * * *'

jobs:
  sync:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v2

      - name: Set up Git identity
        run: |
          git config --global user.email "github-actions@github.com"
          git config --global user.name "github-actions"

      - name: Add remote for pmmp/Pocketmine-MP
        run: |
          git remote add upstream https://github.com/pmmp/Pocketmine-MP.git
          git fetch upstream

      - name: Check for changes
        run: |
          if git diff --quiet remotes/upstream/major-next..origin/update/pmmp; then
            echo "No updates"
            exit 78 # Exit code for neutral status (no changes)
          fi

      - name: Check for existing pull request
        id: check_pr
        run: |
          if hub pr list -h update/pmmp -b stable | grep "update/pmmp"; then
            echo "A pull request already exists, stop the action."
            exit 0
          fi

      - name: Resolve conflicts if any
        id: conflicts
        run: |
          if git diff --name-only --diff-filter=U | grep -E "^(src/|resource/|tools/)"; then
            echo "::set-output name=conflict_detected::true"
            git diff --name-only --diff-filter=U | grep -E "^(src/|resource/|tools/)" > conflict_files.txt
            git diff --diff-filter=U | grep -E "^(src/|resource/|tools/)" > conflict_content.txt
          fi

      - name: Merge changes from upstream to local branch
        id: merge_changes
        run: |
          git config --global user.email "github-actions@github.com"
          git config --global user.name "github-actions"
          git merge upstream/major-next --allow-unrelated-histories || true

      - name: Create Pull Request
        if: steps.check_pr.outcome != 'success'
        run: |
          if [ "${{ steps.conflicts.outputs.conflict_detected }}" == 'true' ]; then
            body_content="This PR merges changes from update/pmmp branch into the stable branch.
          
            Conflicts detected. Manual intervention needed.
          
            Files with conflicts:
            $(cat conflict_files.txt)
          
            Content with conflicts:
            $(cat conflict_content.txt)"
          else
            body_content="This PR merges changes from update/pmmp branch into the stable branch."
          fi
          echo "$body_content" > body_content.txt
          cat body_content.txt
          uses: peter-evans/create-pull-request@v3
          with:
            token: ${{ secrets.GITHUB_TOKEN }}
            branch: update/pmmp
            title: "Merge update/pmmp into stable"
            body: |
              $(cat body_content.txt)
            labels: ""
            base: "stable"